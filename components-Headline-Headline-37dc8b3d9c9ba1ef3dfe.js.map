{"version":3,"sources":["webpack:///./src/components/Headline/Headline.tsx"],"names":["Headline","properties","state","headline","id","content","componentDidMount","isSSR","this","fetchHeadlineOnFireStore","Firestore","clearInstance","initialize","getInstance","collection","where","limit","get","then","querySnapshot","docs","document","data","setState","getHeadlineContent","className","style","dangerouslySetInnerHTML","__html","render","Component"],"mappings":"iPAmBqBA,E,oBAEnB,WAAmBC,GAAiB,aAClC,cAAMA,IAAN,MAEKC,MAAQ,CACXC,SAAU,CACRC,GAAI,GACJC,QAAS,KANqB,E,kHAW7BC,kBAAP,WACQC,eACJC,KAAKC,4B,EAIDA,yBAAR,WAAyC,WAEvCC,IAAUC,gBACVD,IAAUE,aACVF,IAAUG,cACPC,WAAW,aACXC,MAAM,SAAU,MAAM,GACtBC,MAAM,GACNC,MACAC,MAAK,SAACC,GAEL,QAAqC,IAA1BA,EAAcC,KAAK,GAAoB,CAEhD,IAAMC,EAAgBF,EAAcC,KAAK,GAAGE,OAE5C,EAAKC,SAAS,CACZpB,SAAU,CACRC,GAAIe,EAAcC,KAAK,GAAGhB,GAC1BC,QAASgB,EAAShB,gB,EAOtBmB,mBAAR,WACE,OACE,yBAAKC,UAAWC,IAAK,SACnB,2BAAOC,wBAAyB,CAAEC,OAAQpB,KAAKN,MAAMC,SAASE,a,EAK7DwB,OAAP,WAEE,OAAKrB,KAAKN,MAAMC,SAASE,QAKvB,yBAAKD,GAAG,qBAAqBqB,UAAWC,IAAK,WAC1ClB,KAAKgB,sBALA,+B,GAvDwBM","file":"components-Headline-Headline-37dc8b3d9c9ba1ef3dfe.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { isSSR } from '../../common/helper';\n\nimport Firestore from '../Database/Firebase/Firestore';\n\nimport style from './Headline.module.scss';\n\ninterface IProperty {}\n\ninterface IState {\n  headline: IHeadline;\n}\n\ninterface IHeadline {\n  id: string;\n  content: string;\n}\n\nexport default class Headline extends Component<IProperty, IState> {\n\n  public constructor(properties: any) {\n    super(properties);\n\n    this.state = {\n      headline: {\n        id: '',\n        content: ''\n      }\n    };\n  }\n\n  public componentDidMount(): void {\n    if (! isSSR()) {\n      this.fetchHeadlineOnFireStore(); \n    }\n  }\n\n  private fetchHeadlineOnFireStore(): void {\n    \n    Firestore.clearInstance();\n    Firestore.initialize();\n    Firestore.getInstance()\n      .collection('headlines')\n      .where('active', '==', true)\n      .limit(1)\n      .get()\n      .then((querySnapshot: any): void => {\n\n        if (typeof querySnapshot.docs[0] !== 'undefined') {\n          \n          const document: any = querySnapshot.docs[0].data();\n\n          this.setState({\n            headline: {\n              id: querySnapshot.docs[0].id,\n              content: document.content\n            }  \n          });\n        }        \n      });\n  }\n\n  private getHeadlineContent(): JSX.Element {\n    return (\n      <div className={style['content']}>\n        <small dangerouslySetInnerHTML={{ __html: this.state.headline.content }}></small>\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    \n    if (!this.state.headline.content) {\n      return (<div></div>);  \n    }\n\n    return (\n      <div id=\"headline-component\" className={style['container']}>\n        {this.getHeadlineContent()}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}