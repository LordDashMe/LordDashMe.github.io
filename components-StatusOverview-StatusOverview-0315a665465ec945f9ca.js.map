{"version":3,"sources":["webpack:///./src/pages/ph-covid19-tracker/components/StatusOverview/StatusOverview.tsx","webpack:///./src/components/Loader/Loader.tsx"],"names":["AnimateNumber","loadable","fallback","loadableFallbackTemplate","StatusOverview","properties","state","loader","statusOverview","id","sysId","label","count","color","asOfDateTime","componentDidMount","isSSR","this","fetchPHCOVID19TrackerStatusOverviewOnFireStore","Firestore","clearInstance","initialize","getInstance","collection","orderBy","get","then","querySnapshot","docs","map","doc","document","data","filteredDocument","sys_id","setState","getStatusOverview","filter","key","className","style","value","isCommaSeparated","getConfirmCases","getAsOfDateTime","render","visibility","Component","Loader","loaderClasses","props"],"mappings":"yWAQA,IAAMA,EAAgBC,YAAS,CAAD,8KAAC,kBAAM,mCAAP,sPAAqE,CAAEC,SAAUC,YAAyB,+BAoBnHC,E,YAEnB,WAAmBC,GAAiB,aAElC,cAAMA,IAAN,MAEKC,MAAQ,CACXC,QAAQ,EACRC,eAAgB,CACd,CACEC,GAAI,qBACJC,MAAO,kBACPC,MAAO,kBACPC,MAAO,EACPC,MAAO,UACPC,aAAc,IAEhB,CACEL,GAAI,kBACJC,MAAO,eACPC,MAAO,eACPC,MAAO,EACPC,MAAO,WAET,CACEJ,GAAI,eACJC,MAAO,YACPC,MAAO,YACPC,MAAO,EACPC,MAAO,WAET,CACEJ,GAAI,YACJC,MAAO,SACPC,MAAO,SACPC,MAAO,EACPC,MAAO,aAlCqB,E,kCAwC7BE,kBAAP,WACQC,eACJC,KAAKC,kD,EAIDA,+CAAR,WAA+D,WAE7DC,IAAUC,gBACVD,IAAUE,aACVF,IAAUG,cACPC,WAAW,sCACXC,QAAQ,QAAS,QACjBC,MACAC,MAAK,SAACC,GAEL,IAAMnB,EAAsBmB,EAAcC,KAAKC,KAAI,SAACC,GAElD,IAAMC,EAAgBD,EAAIE,OAEpBC,EAAoC,CACxCxB,GAAIqB,EAAIrB,GACRC,MAAOqB,EAASG,OAChBvB,MAAOoB,EAASpB,MAChBC,MAAOmB,EAASnB,MAChBC,MAAOkB,EAASlB,OAOlB,YAJqC,IAA1BkB,EAASjB,eAClBmB,EAAgB,aAAmBF,EAASjB,cAGvCmB,KAGT,EAAKE,SAAS,CACZ3B,eAAgBA,EAChBD,QAAQ,Q,EAKR6B,kBAAR,WACE,OAAQnB,KAAKX,MAAME,eAChB6B,QAAO,SAAC7B,GAEP,MAA6B,oBAAzBA,EAAeE,OAIZF,KAERqB,KAAI,SAACrB,GACJ,OACE,yBAAK8B,IAAK9B,EAAeC,GAAI8B,UAAWC,IAAM,yBAA2B,IAAMhC,EAAeE,OAC5F,4BAAKF,EAAeG,OACpB,uBAAG6B,MAAO,CAAC,MAAShC,EAAeK,QACjC,kBAACb,EAAD,CAAeyC,MAAOjC,EAAeI,MAAO8B,kBAAkB,U,EAOlEC,gBAAR,WACE,OACE,yBAAKL,IAAKrB,KAAKX,MAAME,eAAe,GAAGC,GAAI8B,UAAWC,IAAM,yCAC1D,4BAAKvB,KAAKX,MAAME,eAAe,GAAGG,OAClC,uBAAG6B,MAAO,CAAC,MAASvB,KAAKX,MAAME,eAAe,GAAGK,QAC/C,kBAACb,EAAD,CAAeyC,MAAOxB,KAAKX,MAAME,eAAe,GAAGI,MAAO8B,kBAAkB,O,EAM5EE,gBAAR,WAEE,YAAyD,IAA9C3B,KAAKX,MAAME,eAAe,GAAGM,cAAiCG,KAAKX,MAAME,eAAe,GAAGM,aAKpG,yBAAKyB,UAAWC,IAAM,oCACpB,oCAAUvB,KAAKX,MAAME,eAAe,GAAGM,eALjC,+B,EAUL+B,OAAP,WACE,OACE,yBAAKpC,GAAG,+CAA+C8B,UAAWC,IAAK,WACrE,kBAAC,IAAD,CAAQM,WAAY7B,KAAKX,MAAMC,SAC/B,yBAAKgC,UAAWC,IAAM,oBACnBvB,KAAKmB,oBACLnB,KAAK0B,kBACL1B,KAAK2B,qB,GAzI4BG,c,wHClBvBC,E,gLAEZH,OAAP,WAEE,IAAII,EAAwBT,IAAM,kBAMlC,OAJMvB,KAAKiC,MAAMJ,aACfG,GAAiB,IAAMT,IAAK,KAI5B,yBAAK/B,GAAG,mBAAmB8B,UAAWC,IAAK,WACzC,yBAAKD,UAAWU,GACd,yBAAKV,UAAWC,IAAK,Y,GAbKO","file":"components-StatusOverview-StatusOverview-0315a665465ec945f9ca.js","sourcesContent":["import React, { Component } from 'react';\nimport loadable from '@loadable/component';\n\nimport { isSSR, loadableFallbackTemplate } from '../../../../common/helper';\n\nimport Firestore from '../../../../components/Database/Firebase/Firestore';\nimport Loader from '../../../../components/Loader/Loader';\n\nconst AnimateNumber = loadable(() => import('../../../../components/AnimateNumber/AnimateNumber'), { fallback: loadableFallbackTemplate(`#animate-number-component`) });\n\nimport style from './StatusOverview.module.scss';\n\ninterface IProperty {}\n\ninterface IState {\n  loader: boolean;\n  statusOverview: IStatusOverview[];\n}\n\ninterface IStatusOverview {\n  id: string;\n  sysId: string;\n  label: string;\n  count: number;\n  color: string;\n  asOfDateTime?: string;\n}\n\nexport default class StatusOverview extends Component<IProperty, IState> {\n\n  public constructor(properties: any) {\n    \n    super(properties);\n    \n    this.state = {\n      loader: true,\n      statusOverview: [\n        {\n          id: 'id_confirmed_cases',\n          sysId: 'confirmed_cases',\n          label: 'CONFIRMED CASES',\n          count: 0,\n          color: '#6f6f6f',\n          asOfDateTime: '' // March 14, 2020 7PM PST\n        },\n        {\n          id: 'id_active_cases',\n          sysId: 'active_cases',\n          label: 'ACTIVE CASES',\n          count: 0,\n          color: '#e29e01'\n        },\n        {\n          id: 'id_recovered',\n          sysId: 'recovered',\n          label: 'RECOVERED',\n          count: 0,\n          color: '#60a138'\n        },\n        {\n          id: 'id_deaths',\n          sysId: 'deaths',\n          label: 'DEATHS',\n          count: 0,\n          color: '#a13838'\n        }\n      ]\n    };\n  }\n\n  public componentDidMount(): void {\n    if (! isSSR()) {\n      this.fetchPHCOVID19TrackerStatusOverviewOnFireStore(); \n    }\n  }\n\n  private fetchPHCOVID19TrackerStatusOverviewOnFireStore(): void {\n    \n    Firestore.clearInstance();\n    Firestore.initialize();\n    Firestore.getInstance()\n      .collection('ph-covid19-tracker-status-overview')\n      .orderBy('order', 'desc')\n      .get()\n      .then((querySnapshot: any): void => {\n\n        const statusOverview: any = querySnapshot.docs.map((doc: any): IStatusOverview => {\n          \n          const document: any = doc.data();\n          \n          const filteredDocument: IStatusOverview = {\n            id: doc.id,\n            sysId: document.sys_id,\n            label: document.label,\n            count: document.count,\n            color: document.color\n          };\n          \n          if (typeof document.asOfDateTime !== 'undefined') {\n            filteredDocument['asOfDateTime'] = document.asOfDateTime;\n          }\n\n          return filteredDocument;\n        });\n\n        this.setState({\n          statusOverview: statusOverview,\n          loader: false\n        });\n      });\n  }\n\n  private getStatusOverview(): JSX.Element[] {\n    return (this.state.statusOverview)\n      .filter((statusOverview: IStatusOverview): IStatusOverview | boolean => {\n        \n        if (statusOverview.sysId === 'confirmed_cases') {\n          return false;\n        }\n\n        return statusOverview;\n      })\n      .map((statusOverview: IStatusOverview): JSX.Element => {\n        return (\n          <div key={statusOverview.id} className={style['status-overivew-items'] + ' ' + statusOverview.sysId}>\n            <h2>{statusOverview.label}</h2>\n            <p style={{'color': statusOverview.color}}>\n              <AnimateNumber value={statusOverview.count} isCommaSeparated={true} />\n            </p>\n          </div>\n        );\n      });\n  }\n\n  private getConfirmCases(): JSX.Element {\n    return (\n      <div key={this.state.statusOverview[0].id} className={style['status-overivew-item-confirmed-cases']}>\n        <h2>{this.state.statusOverview[0].label}</h2>\n        <p style={{'color': this.state.statusOverview[0].color}}>\n          <AnimateNumber value={this.state.statusOverview[0].count} isCommaSeparated={true} />\n        </p>\n      </div>\n    );\n  }\n\n  private getAsOfDateTime(): JSX.Element {\n    \n    if (typeof this.state.statusOverview[0].asOfDateTime === 'undefined' || !this.state.statusOverview[0].asOfDateTime) {\n      return (<div></div>);\n    }\n    \n    return (\n      <div className={style['status-overview-as-of-date-time']}>\n        <p>As of {this.state.statusOverview[0].asOfDateTime}</p>\n      </div>\n    );\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div id=\"ph-covid19-tracker-status-overview-component\" className={style['container']}>\n        <Loader visibility={this.state.loader}/>\n        <div className={style['status-overview']}>\n          {this.getStatusOverview()}\n          {this.getConfirmCases()}\n          {this.getAsOfDateTime()}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport style from './Loader.module.scss';\n\ninterface IProperty {\n  visibility: boolean;\n}\n\ninterface IState {}\n\nexport default class Loader extends Component<IProperty, IState> {\n\n  public render(): JSX.Element {\n\n    let loaderClasses: string = style['signal-wrapper'];\n    \n    if (! this.props.visibility) {\n      loaderClasses += ' ' + style['off'];\n    }\n\n    return (\n      <div id=\"loader-component\" className={style['container']}>\n        <div className={loaderClasses}>\n          <div className={style['signal']}></div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}