{"version":3,"sources":["webpack:///./src/components/Headline/Headline.module.scss","webpack:///./src/components/Headline/Headline.tsx"],"names":["module","exports","Headline","properties","isFullyMounted","state","headline","id","content","visibility","componentWillUnmount","isSSR","this","isMounted","componentDidMount","fetchHeadlineOnFireStore","window","lorddashme_headline","then","Firestore","default","clearInstance","initialize","getInstance","collection","where","limit","get","querySnapshot","docs","console","log","document","data","setState","getHeadlineContent","className","style","dangerouslySetInnerHTML","__html","getHeadlineCloseButton","onClick","onClickHeadlineCloseButton","bind","aria-hidden","render","status","Component"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,UAAY,oCAAoC,QAAU,kCAAkC,MAAQ,kC,+TCuBjGC,E,oBAInB,WAAmBC,GAAiB,aAClC,cAAMA,IAAN,MAHMC,gBAA0B,EAKhC,EAAKC,MAAQ,CACXC,SAAU,CACRC,GAAI,GACJC,QAAS,GACTC,YAAY,IAPkB,E,wHAoB7BC,qBAAP,WACOC,gBACHC,KAAKC,WAAY,I,EAIdC,kBAAP,WACOH,gBACHC,KAAKC,WAAY,EACjBD,KAAKG,6B,EAIDA,yBAAR,WAAyC,gBAEG,IAA/BC,OAAOC,oBAEhB,iCAA6EC,MAAK,SAACC,GAEjFA,EAAUC,QAAQC,gBAClBF,EAAUC,QAAQE,aAClBH,EAAUC,QAAQG,cACfC,WAAW,aACXC,MAAM,SAAU,MAAM,GACtBC,MAAM,GACNC,MACAT,MAAK,SAACU,GAEL,QAAqC,IAA1BA,EAAcC,KAAK,GAG5B,OAFAb,OAAOC,oBAAsB,UAC7Ba,QAAQC,IAAI,wDAId,IAAMC,EAAgBJ,EAAcC,KAAK,GAAGI,OAEtC3B,EAAW,OAAH,UAAO,EAAKD,MAAMC,UAEhCA,EAAQ,GAASsB,EAAcC,KAAK,GAAGtB,GACvCD,EAAQ,QAAc0B,EAASxB,QAE/BQ,OAAOC,oBAAsBX,EAEzB,EAAKO,WACP,EAAKqB,SAAS,CAAE5B,SAAUA,IAG5BwB,QAAQC,IAAI,mDAKsB,OAA/Bf,OAAOC,0BAAyE,IAAlCD,OAAOC,oBAAoBV,IAE9EK,KAAKC,WACPD,KAAKsB,SAAS,CACZ5B,SAAU,CACRC,GAAIS,OAAOC,oBAAoBV,GAC/BC,QAASQ,OAAOC,oBAAoBT,QACpCC,WAAYO,OAAOC,oBAAoBR,e,EAOzC0B,mBAAR,WACE,OACE,yBAAKC,UAAWC,IAAK,SACnB,2BAAOC,wBAAyB,CAAEC,OAAQ3B,KAAKP,MAAMC,SAASE,a,EAK5DgC,uBAAR,WACE,OACE,yBAAKJ,UAAWC,IAAK,MAAWI,QAAS7B,KAAK8B,2BAA2BC,KAAK/B,OAC5E,uBAAGwB,UAAU,eAAeQ,cAAY,W,EAKtCF,2BAAR,WAEE,IAAMpC,EAAsB,OAAH,UAAOM,KAAKP,MAAMC,UAE3CA,EAAQ,YAAiB,EAEzBU,OAAOC,oBAAsBX,EAE7BM,KAAKsB,SAAS,CAAE5B,SAAUA,K,EAGrBuC,OAAP,WAEE,MAAoC,KAAhCjC,KAAKP,MAAMC,SAASE,SAAmBI,KAAKP,MAAMC,SAASG,WAK7D,yBAAKF,GAAG,qBAAqB6B,UAAWC,IAAK,WAC1CzB,KAAKuB,qBACLvB,KAAK4B,0BAND,M,sCAxGUM,GACnBlC,KAAKR,eAAiB0C,G,eAItB,OAAOlC,KAAKR,oB,8BArBsB2C","file":"components-Headline-Headline-7ab6c90a7be2f1c245f0.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Headline-module--container--DDJOw\",\"content\":\"Headline-module--content--1PgEF\",\"close\":\"Headline-module--close--PlBA0\"};","import React, { Component } from 'react';\n\nimport { isSSR } from '../../common/helper';\n\nimport style from './Headline.module.scss';\n\ndeclare global {\n  interface Window {\n    lorddashme_headline: IHeadline | null;\n  }\n}\n\ninterface IProperty {}\n\ninterface IState {\n  headline: IHeadline;\n}\n\ninterface IHeadline {\n  id: string;\n  content: string;\n  visibility: boolean;\n}\n\nexport default class Headline extends Component<IProperty, IState> {\n\n  private isFullyMounted: boolean = false;\n\n  public constructor(properties: any) {\n    super(properties);\n\n    this.state = {\n      headline: {\n        id: '',\n        content: '',\n        visibility: true\n      }\n    };\n  }\n\n  public set isMounted(status: boolean) {\n    this.isFullyMounted = status;\n  }\n\n  public get isMounted(): boolean {\n    return this.isFullyMounted;\n  }\n\n  public componentWillUnmount(): void {\n    if (!isSSR()) {\n      this.isMounted = false;\n    }\n  }\n\n  public componentDidMount(): void {\n    if (!isSSR()) {\n      this.isMounted = true;\n      this.fetchHeadlineOnFireStore();\n    }\n  }\n\n  private fetchHeadlineOnFireStore(): void {\n\n    if (typeof window.lorddashme_headline === 'undefined') {\n      \n      import(/* webpackChunkName: \"Firestore\" */ '../Database/Firebase/Firestore').then((Firestore) => {\n\n        Firestore.default.clearInstance();\n        Firestore.default.initialize();\n        Firestore.default.getInstance()\n          .collection('headlines')\n          .where('active', '==', true)\n          .limit(1)\n          .get()\n          .then((querySnapshot: any): void => {\n\n            if (typeof querySnapshot.docs[0] === 'undefined') {\n              window.lorddashme_headline = null;\n              console.log('[LDM] Headline_Component: No headline at the moment.');\n              return;\n            }\n\n            const document: any = querySnapshot.docs[0].data();\n\n            const headline = {...this.state.headline};\n\n            headline['id'] = querySnapshot.docs[0].id;\n            headline['content'] = document.content;\n\n            window.lorddashme_headline = headline;\n\n            if (this.isMounted) {\n              this.setState({ headline: headline });\n            }\n            \n            console.log('[LDM] Headline_Component: Fresh headline!');\n          });\n\n      });\n\n    } else if (window.lorddashme_headline !== null && typeof window.lorddashme_headline.id !== 'undefined') {\n\n      if (this.isMounted) {\n        this.setState({\n          headline: {\n            id: window.lorddashme_headline.id,\n            content: window.lorddashme_headline.content,\n            visibility: window.lorddashme_headline.visibility\n          }  \n        });\n      }\n    }\n  }\n\n  private getHeadlineContent(): JSX.Element {\n    return (\n      <div className={style['content']}>\n        <small dangerouslySetInnerHTML={{ __html: this.state.headline.content }}></small>\n      </div>\n    );\n  }\n\n  private getHeadlineCloseButton(): JSX.Element {\n    return (\n      <div className={style['close']} onClick={this.onClickHeadlineCloseButton.bind(this)}>\n        <i className=\"fas fa-times\" aria-hidden=\"true\"></i>\n      </div>\n    );\n  }\n\n  private onClickHeadlineCloseButton(): void {\n\n    const headline: IHeadline = {...this.state.headline};\n\n    headline['visibility'] = false;\n\n    window.lorddashme_headline = headline;\n\n    this.setState({ headline: headline });\n  }\n\n  public render(): JSX.Element | null {\n    \n    if (this.state.headline.content === '' || !this.state.headline.visibility) {\n      return null;  \n    }\n\n    return (\n      <div id=\"headline-component\" className={style['container']}>\n        {this.getHeadlineContent()}\n        {this.getHeadlineCloseButton()}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}