{"version":3,"sources":["webpack:///./src/pages/ph-covid19-tracker/components/SuggestedVideo/SuggestedVideo.tsx"],"names":["YoutubeIframe","loadable","fallback","SuggestedVideo","properties","state","suggestedVideo","componentDidMount","isSSR","this","fetchPHCOVID19TrackerSuggestedVideoOnFireStore","Firestore","clearInstance","initialize","getInstance","collection","where","get","then","querySnapshot","docs","map","doc","document","data","id","videoId","video_id","setState","getSuggestedVideo","key","className","style","elementId","height","width","render","Component"],"mappings":"2VAOA,IAAMA,EAAgBC,YAAS,CAAD,oLAAC,kBAAM,mCAAP,sPAA2E,CAAEC,SAAU,OAehGC,E,YAEnB,WAAmBC,GAAiB,aAClC,cAAMA,IAAN,MAEKC,MAAQ,CACXC,eAAgB,IAJgB,E,kCAQ7BC,kBAAP,WACQC,eACJC,KAAKC,kD,EAIDA,+CAAR,WAA+D,WAE7DC,IAAUC,gBACVD,IAAUE,aACVF,IAAUG,cACPC,WAAW,sCACXC,MAAM,SAAU,MAAM,GACtBC,MACAC,MAAK,SAACC,GAEL,IAAMb,EAAsBa,EAAcC,KAAKC,KAAI,SAACC,GAClD,IAAMC,EAAgBD,EAAIE,OAC1B,MAAO,CACLC,GAAIH,EAAIG,GACRC,QAASH,EAASI,aAItB,EAAKC,SAAS,CACZtB,eAAgBA,Q,EAKhBuB,kBAAR,WACE,OAAOpB,KAAKJ,MAAMC,eAAee,KAAI,SAACf,GACpC,OACE,yBAAKwB,IAAKxB,EAAemB,GAAIM,UAAWC,IAAK,SAC3C,kBAAChC,EAAD,CACEiC,UAAW,sCAAwC3B,EAAeoB,QAClEA,QAASpB,EAAeoB,QACxBQ,OAAQ,OACRC,MAAO,c,EAMVC,OAAP,WACE,OACE,yBAAKX,GAAG,+CAA+CM,UAAWC,IAAK,WACrE,wBAAID,UAAWC,IAAK,OAApB,mBACCvB,KAAKoB,sB,GA1D8BQ","file":"component---src-pages-ph-covid-19-tracker-components-suggested-video-suggested-video-tsx-4c433af64ee073a3656a.js","sourcesContent":["import React, { Component } from 'react';\nimport loadable from '@loadable/component';\n\nimport { isSSR, loadableFallbackTemplate } from '../../../../common/helper';\n\nimport Firestore from '../../../../components/Database/Firebase/Firestore';\n\nconst YoutubeIframe = loadable(() => import('../../../../components/VideoPlayer/Youtube/YoutubeIframe'), { fallback: null });\n\nimport style from './SuggestedVideo.module.scss';\n\ninterface IProperty {}\n\ninterface IState {\n  suggestedVideo: ISuggestedVideo[];\n}\n\ninterface ISuggestedVideo {\n  id: string;\n  videoId: string;\n}\n\nexport default class SuggestedVideo extends Component<IProperty, IState> {\n\n  public constructor(properties: any) {\n    super(properties);\n\n    this.state = {\n      suggestedVideo: []\n    };\n  }\n\n  public componentDidMount(): void {\n    if (! isSSR()) {\n      this.fetchPHCOVID19TrackerSuggestedVideoOnFireStore(); \n    }\n  }\n\n  private fetchPHCOVID19TrackerSuggestedVideoOnFireStore(): void {\n    \n    Firestore.clearInstance();\n    Firestore.initialize();\n    Firestore.getInstance()\n      .collection('ph-covid19-tracker-suggested-video')\n      .where('active', '==', true)\n      .get()\n      .then((querySnapshot: any): void => { \n        \n        const suggestedVideo: any = querySnapshot.docs.map((doc: any): ISuggestedVideo => {\n          const document: any = doc.data();\n          return {\n            id: doc.id,\n            videoId: document.video_id\n          };\n        });\n\n        this.setState({\n          suggestedVideo: suggestedVideo\n        });\n      });\n  }\n\n  private getSuggestedVideo(): JSX.Element[] {\n    return this.state.suggestedVideo.map((suggestedVideo: ISuggestedVideo): JSX.Element => {\n      return(\n        <div key={suggestedVideo.id} className={style['content']}>\n          <YoutubeIframe \n            elementId={'ph-covid19-tracker-suggested-video-' + suggestedVideo.videoId} \n            videoId={suggestedVideo.videoId} \n            height={'100%'} \n            width={'100%'} />\n        </div>\n      );\n    });\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div id=\"ph-covid19-tracker-suggested-video-component\" className={style['container']}>\n        <h2 className={style['title']}>SUGGESTED VIDEO</h2>\n        {this.getSuggestedVideo()}\n      </div>\n    );\n  } \n}\n"],"sourceRoot":""}