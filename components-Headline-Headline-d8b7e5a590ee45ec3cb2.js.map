{"version":3,"sources":["webpack:///./src/components/Headline/Headline.tsx"],"names":["Headline","properties","state","headline","id","content","visibility","componentDidMount","isSSR","this","fetchHeadlineOnFireStore","window","lorddashme_headline","Firestore","clearInstance","initialize","getInstance","collection","where","limit","get","then","querySnapshot","docs","document","data","setState","console","log","getHeadlineContent","className","style","dangerouslySetInnerHTML","__html","getHeadlineCloseButton","onClick","onClickHeadlineCloseButton","bind","aria-hidden","render","Component"],"mappings":"2PA0BqBA,E,oBAEnB,WAAmBC,GAAiB,aAClC,cAAMA,IAAN,MAEKC,MAAQ,CACXC,SAAU,CACRC,GAAI,GACJC,QAAS,GACTC,YAAY,IAPkB,E,kHAY7BC,kBAAP,WACQC,eACJC,KAAKC,4B,EAIDA,yBAAR,WAAyC,gBAEG,IAA/BC,OAAOC,qBAEhBC,IAAUC,gBACVD,IAAUE,aACVF,IAAUG,cACPC,WAAW,aACXC,MAAM,SAAU,MAAM,GACtBC,MAAM,GACNC,MACAC,MAAK,SAACC,GAEL,QAAqC,IAA1BA,EAAcC,KAAK,GAAoB,CAEhD,IAAMC,EAAgBF,EAAcC,KAAK,GAAGE,OAEtCtB,EAAW,OAAH,UAAO,EAAKD,MAAMC,UAEhCA,EAAQ,GAASmB,EAAcC,KAAK,GAAGnB,GACvCD,EAAQ,QAAcqB,EAASnB,QAE/BM,OAAOC,oBAAsBT,EAE7B,EAAKuB,SAAS,CACZvB,SAAUA,IAGZwB,QAAQC,IAAI,4CAMlBnB,KAAKiB,SAAS,CACZvB,SAAU,CACRC,GAAIO,OAAOC,oBAAoBR,GAC/BC,QAASM,OAAOC,oBAAoBP,QACpCC,WAAYK,OAAOC,oBAAoBN,e,EAMvCuB,mBAAR,WACE,OACE,yBAAKC,UAAWC,IAAK,SACnB,2BAAOC,wBAAyB,CAAEC,OAAQxB,KAAKP,MAAMC,SAASE,a,EAK5D6B,uBAAR,WACE,OACE,yBAAKJ,UAAWC,IAAK,MAAWI,QAAS1B,KAAK2B,2BAA2BC,KAAK5B,OAC5E,uBAAGqB,UAAU,eAAeQ,cAAY,W,EAKtCF,2BAAR,WAEE,IAAMjC,EAAW,OAAH,UAAOM,KAAKP,MAAMC,UAEhCA,EAAQ,YAAiB,EAEzBQ,OAAOC,oBAAsBT,EAE7BM,KAAKiB,SAAS,CACZvB,SAAUA,K,EAIPoC,OAAP,WAEE,OAAK9B,KAAKP,MAAMC,SAASE,SAAYI,KAAKP,MAAMC,SAASG,WAKvD,yBAAKF,GAAG,qBAAqB0B,UAAWC,IAAK,WAC1CtB,KAAKoB,qBACLpB,KAAKyB,0BANA,+B,GAhGwBM","file":"components-Headline-Headline-d8b7e5a590ee45ec3cb2.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { isSSR } from '../../common/helper';\n\nimport Firestore from '../Database/Firebase/Firestore';\n\nimport style from './Headline.module.scss';\n\ndeclare global {\n  interface Window {\n    lorddashme_headline: IHeadline;\n  }\n}\n\ninterface IProperty {}\n\ninterface IState {\n  headline: IHeadline;\n}\n\ninterface IHeadline {\n  id: string;\n  content: string;\n  visibility: boolean;\n}\n\nexport default class Headline extends Component<IProperty, IState> {\n\n  public constructor(properties: any) {\n    super(properties);\n\n    this.state = {\n      headline: {\n        id: '',\n        content: '',\n        visibility: true\n      }\n    };\n  }\n\n  public componentDidMount(): void {\n    if (! isSSR()) {\n      this.fetchHeadlineOnFireStore(); \n    }\n  }\n\n  private fetchHeadlineOnFireStore(): void {\n\n    if (typeof window.lorddashme_headline === 'undefined') {\n      \n      Firestore.clearInstance();\n      Firestore.initialize();\n      Firestore.getInstance()\n        .collection('headlines')\n        .where('active', '==', true)\n        .limit(1)\n        .get()\n        .then((querySnapshot: any): void => {\n\n          if (typeof querySnapshot.docs[0] !== 'undefined') {\n            \n            const document: any = querySnapshot.docs[0].data();\n\n            const headline = {...this.state.headline};\n\n            headline['id'] = querySnapshot.docs[0].id;\n            headline['content'] = document.content;\n\n            window.lorddashme_headline = headline;\n\n            this.setState({\n              headline: headline  \n            });\n\n            console.log('Headline_Component: Fresh headline!');\n          }        \n        });\n\n    } else {\n\n      this.setState({\n        headline: {\n          id: window.lorddashme_headline.id,\n          content: window.lorddashme_headline.content,\n          visibility: window.lorddashme_headline.visibility\n        }  \n      });\n    }\n  }\n\n  private getHeadlineContent(): JSX.Element {\n    return (\n      <div className={style['content']}>\n        <small dangerouslySetInnerHTML={{ __html: this.state.headline.content }}></small>\n      </div>\n    );\n  }\n\n  private getHeadlineCloseButton(): JSX.Element {\n    return (\n      <div className={style['close']} onClick={this.onClickHeadlineCloseButton.bind(this)}>\n        <i className=\"fas fa-times\" aria-hidden=\"true\"></i>\n      </div>\n    );\n  }\n\n  private onClickHeadlineCloseButton(): void {\n\n    const headline = {...this.state.headline};\n\n    headline['visibility'] = false;\n\n    window.lorddashme_headline = headline;\n\n    this.setState({\n      headline: headline\n    });\n  }\n\n  public render(): JSX.Element {\n    \n    if (!this.state.headline.content || !this.state.headline.visibility) {\n      return (<div></div>);  \n    }\n\n    return (\n      <div id=\"headline-component\" className={style['container']}>\n        {this.getHeadlineContent()}\n        {this.getHeadlineCloseButton()}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}