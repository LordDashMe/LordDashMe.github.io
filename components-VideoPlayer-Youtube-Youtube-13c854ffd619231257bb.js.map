{"version":3,"sources":["webpack:///./src/components/VideoPlayer/Youtube/Youtube.tsx"],"names":["Youtube","properties","player","state","componentDidMount","isSSR","this","onYouTubeIframeAPIReady","YT","Player","origin","window","location","protocol","host","props","elementId","height","width","videoId","playerVars","rel","playsinline","console","info","setTimeout","bind","render","id","Component"],"mappings":"gNAgBqBA,E,oBAInB,WAAmBC,GAAiB,aAClC,cAAMA,IAAN,MAHMC,OAAc,KAKpB,EAAKC,MAAQ,GAHqB,E,kHAM7BC,kBAAP,WACQC,eACJC,KAAKC,2B,EAIDA,wBAAR,WAEE,GAAmB,oBAAPC,IAAuBA,IAAMA,GAAGC,OAAQ,CAElD,IAAIC,EAASC,OAAOC,SAASC,SAAW,KAAOF,OAAOC,SAASE,UAE9B,IAAtBR,KAAKS,MAAML,QAA0BJ,KAAKS,MAAML,SACzDA,EAASJ,KAAKS,MAAML,QAGtBJ,KAAKJ,OAAS,IAAIM,GAAGC,OAAOH,KAAKS,MAAMC,UAAW,CAChDC,OAAQX,KAAKS,MAAME,OACnBC,MAAOZ,KAAKS,MAAMG,MAClBC,QAASb,KAAKS,MAAMI,QACpBC,WAAY,CACRV,OAAQA,EACRW,IAAK,EACLC,YAAa,UAKnBC,QAAQC,KAAK,oCACbC,WAAWnB,KAAKC,wBAAwBmB,KAAKpB,MAAO,M,EAIjDqB,OAAP,WACE,OAAQ,yBAAKC,GAAItB,KAAKS,MAAMC,a,GA5CKa","file":"components-VideoPlayer-Youtube-Youtube-13c854ffd619231257bb.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { isSSR } from '../../../common/helper';\n\ninterface IProperty {\n  elementId: string;\n  videoId: string;\n  height: string;\n  width: string;\n  origin?: string;\n}\n\ninterface IState {}\n\ndeclare const YT: any;\n\nexport default class Youtube extends Component<IProperty, IState> {\n\n  private player: any = null;\n\n  public constructor(properties: any) {\n    super(properties);\n\n    this.state = {};\n  }\n\n  public componentDidMount(): void {\n    if (! isSSR()) {\n      this.onYouTubeIframeAPIReady();\n    }\n  }\n\n  private onYouTubeIframeAPIReady(): void {\n\n    if ((typeof YT !== \"undefined\") && YT && YT.Player) {\n\n      let origin = window.location.protocol + '//' + window.location.host;\n      \n      if (typeof this.props.origin !== 'undefined' && this.props.origin) {\n        origin = this.props.origin;\n      }\n\n      this.player = new YT.Player(this.props.elementId, {\n        height: this.props.height,\n        width: this.props.width,\n        videoId: this.props.videoId,\n        playerVars: {\n            origin: origin,\n            rel: 0,\n            playsinline: 1\n        }\n      });\n      \n    } else {\n      console.info('Waiting for YT to load properly.');\n      setTimeout(this.onYouTubeIframeAPIReady.bind(this), 500);\n    }\n  }\n\n  public render(): JSX.Element {\n    return (<div id={this.props.elementId}></div>);\n  }\n}\n"],"sourceRoot":""}