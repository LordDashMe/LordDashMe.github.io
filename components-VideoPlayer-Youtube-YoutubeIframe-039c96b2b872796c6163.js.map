{"version":3,"sources":["webpack:///./src/components/VideoPlayer/Youtube/YoutubeIframe.tsx"],"names":["YoutubeIframe","properties","state","componentDidMount","isSSR","this","onYouTubeIframeAPIReady","YT","Player","console","log","setElementId","props","elementId","height","width","videoId","playerVars","rel","enablejsapi","playsinline","origin","window","location","widget_referrer","info","WAITING_TIME","setTimeout","bind","render","id","Component"],"mappings":"gNAeqBA,E,oBAInB,WAAmBC,GAAiB,aAElC,cAAMA,IAAN,MAEKC,MAAQ,GAJqB,E,kHAO7BC,kBAAP,WACQC,eACJC,KAAKC,2B,EAIDA,wBAAR,WAEoB,oBAAPC,IAAsBA,IAAMA,GAAGC,QACxCC,QAAQC,IAAI,mEACZ,IAAIH,GAAGC,OACLH,KAAKM,aAAaN,KAAKO,MAAMC,WAC7B,CACEC,OAAQT,KAAKO,MAAME,OACnBC,MAAOV,KAAKO,MAAMG,MAClBC,QAASX,KAAKO,MAAMI,QACpBC,WAAY,CACVC,IAAK,EACLC,YAAa,EACbC,YAAa,EACbC,OAAQC,OAAOC,SAASF,OACxBG,gBAAiBF,OAAOC,SAASF,YAKvCZ,QAAQgB,KAAR,uFAAoGzB,EAAc0B,aAAlH,MACAC,WAAWtB,KAAKC,wBAAwBsB,KAAKvB,MAAOL,EAAc0B,gB,EAI9Df,aAAR,SAAqBE,GACnB,MAAO,+BAAiCA,EAAY,c,EAG/CgB,OAAP,WACE,OAAQ,yBAAKC,GAAIzB,KAAKM,aAAaN,KAAKO,MAAMC,c,GA/CPkB,aAAtB/B,EAEK0B,aAAe","file":"components-VideoPlayer-Youtube-YoutubeIframe-039c96b2b872796c6163.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { isSSR } from '../../../common/helper';\n\ndeclare const YT: any;\n\ninterface IProperty {\n  elementId: string;\n  videoId: string;\n  height: string;\n  width: string;\n}\n\ninterface IState {}\n\nexport default class YoutubeIframe extends Component<IProperty, IState> {\n\n  private static readonly WAITING_TIME = 1000;\n\n  public constructor(properties: any) {\n    \n    super(properties);\n\n    this.state = {};\n  }\n\n  public componentDidMount(): void {\n    if (! isSSR()) {\n      this.onYouTubeIframeAPIReady();\n    }\n  }\n\n  private onYouTubeIframeAPIReady(): void {\n\n    if (typeof YT !== 'undefined' && YT && YT.Player) {\n      console.log('[LDM] VideoPlayer_Youtube_YoutubeIframe_Component: YT detected!');\n      new YT.Player(\n        this.setElementId(this.props.elementId), \n        {\n          height: this.props.height,\n          width: this.props.width,\n          videoId: this.props.videoId,\n          playerVars: {\n            rel: 0,\n            enablejsapi: 1,\n            playsinline: 0,\n            origin: window.location.origin,\n            widget_referrer: window.location.origin\n          }\n        }\n      );\n    } else {\n      console.info(`[LDM] VideoPlayer_Youtube_YoutubeIframe_Component: Waiting for YT to load properly. ${YoutubeIframe.WAITING_TIME}ms`);\n      setTimeout(this.onYouTubeIframeAPIReady.bind(this), YoutubeIframe.WAITING_TIME);\n    }\n  }\n\n  private setElementId(elementId: string): string {\n    return 'video-player-youtube-iframe-' + elementId + '-component';\n  }\n\n  public render(): JSX.Element {\n    return (<div id={this.setElementId(this.props.elementId)}></div>);\n  }\n}\n"],"sourceRoot":""}